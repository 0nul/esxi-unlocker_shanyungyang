# This is a basic workflow to help you get started with Actions

name: Manual CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch

on:
  workflow_dispatch:
    inputs:
      semver:
        description: 'Version'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a few command using the runners shell
      - name: Run a multi-line script
        run: | 
          # pwd debug
          tar -cvzf unlocker.tgz etc
          tar -cvzf esxi-unlocker-${{ github.event.inputs.semver }}.tgz *.*
          # ls -al more debug

      # release automation.gz
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.event.inputs.semver }}
          release_name: Release ${{ github.event.inputs.semver }}
#           body: |
#             Changes in this Release
#             - First Change
#             - Second Change
          draft: true
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./readme.md
          asset_name: readme.md
          asset_content_type: text/plain 
      - name: Upload Release Asset2
        id: upload-release-asset2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./esxi-unlocker-${{ github.event.inputs.semver }}.tgz
          asset_name: esxi-unlocker-${{ github.event.inputs.semver }}.tgz
          asset_content_type: application/zip 
